no-response-timeout: 15
box: combient/java-mvn
build:
  steps:
    - script:
        name: Maven build - MBean Sample application
        code: mvn clean package

build-domain-in-home-image:
  box:
      id: alpine
      cmd: /bin/sh
  docker: true
  steps:
    - script:
        name: Install curl, docker, git, maven and java
        code: apk --no-cache add curl docker git maven openjdk8
    - script:
        name: Build logging and metrics exporters
        code: |
              echo ' - logging exporter...'
              wget -O weblogic-logging-exporter-0.1.jar \
                https://github.com/oracle/weblogic-logging-exporter/releases/download/v0.1/weblogic-logging-exporter-0.1.jar

              wget -O snakeyaml-1.23.jar \
                http://repo1.maven.org/maven2/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar

              echo ' - metrics exporter...'
              git clone https://github.com/oracle/weblogic-monitoring-exporter
              cd weblogic-monitoring-exporter
              mvn clean install
              cd webapp
              mvn clean package -Dconfiguration=../../exporter-config.yaml
              cd ../..
              cp weblogic-monitoring-exporter/webapp/target/wls-exporter.war \
                wls-exporter.war

    - script:
        name: Build and push docker image
        code: |
              export APPLICATION_NAME=rjeberha-summit-weblogic
              docker login $REGION.ocir.io -u $TENANCY/$OCI_REGISTRY_USERNAME -p $OCI_REGISTRY_PASSWORD
              if docker pull $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:1.0; then
                docker build --file Dockerfile.update \
                    --build-arg SOURCEIMAGE=$REGION.ocir.io/$TENANCY/$APPLICATION_NAME:latest \
                    --force-rm=true \
                    -t $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:$WERCKER_GIT_COMMIT \
                    -t $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:2.0 .
                docker push $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:$WERCKER_GIT_COMMIT
                docker push $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:2.0
              else
                docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                docker build --file Dockerfile.create \
                    --force-rm=true \
                    -t $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:$WERCKER_GIT_COMMIT \
                    -t $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:1.0 .
                docker push $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:$WERCKER_GIT_COMMIT
                docker push $REGION.ocir.io/$TENANCY/$APPLICATION_NAME:1.0
              fi
